# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build: 
    working_directory: ~/pricing
    docker:
      - image: circleci/node:9.11
        environment:
            GOOGLE_PROJECT_ID: tokentax-infra-209601
            CONTAINER_NAME: tt-pricing
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: making sure we're in the root directory
          command: ls -a
      - run:
          name: Does docker even exist
          command: docker -v
      - run:
          name: yarn install
          command: yarn install
      - run: 
          name: building docker image
          command: docker build --rm=false -t gcr.io/${GOOGLE_PROJECT_ID}/${CONTAINER_NAME}:$CIRCLE_SHA1 .
      - run:
          name: Mkdir docker-cache
          command: mkdir -p docker-cache
      - run:
          name: Save docker image to cache directory
          command: docker save -o docker-cache/built-image.tar gcr.io/${GOOGLE_PROJECT_ID}/${CONTAINER_NAME}:$CIRCLE_SHA1
      - persist_to_workspace:
          root: .
          paths:
            - docker-cache
      - save_cache:
          key: node-modules-{{ checksum "package.json" }}
          paths:
            - node_modules
      
  test:
    working_directory: ~/pricing
    docker:
      # specify the version you desire here
      - image: circleci/node:9.11
        environment:
            NODE_ENV: test
      - image: circleci/postgres:10.3-alpine-postgis
        environment:
          POSTGRES_USER: circle_test
          POSTGRES_DB: tt_history_test

    steps:
      - checkout
      - restore_cache:
          keys:
            - node-modules-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - node-modules-
        
      - run: yarn test
      
  deploy:
    working_directory: ~/pricing
    docker:
      - image: google/cloud-sdk
        environment:
          GOOGLE_PROJECT_ID: tokentax-infra-209601
          CLUSTER_NAME: tt-cluster
          COMPUTE_ZONE: us-east1-c
          #As specified in Deployment.yml
          DEPLOYMENT_NAME: tt-pricing-dep
          CONTAINER_NAME: tt-pricing
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: .
      - run:
          name: Load docker image from cache
          command: docker load --input docker-cache/built-image.tar
      - run:
          name: Store Service Account
          command: echo $GCLOUD_SERVICE_KEY > key.txt
      - run:
          name: Decode Service Account
          command: base64 -i key.txt -d > ${HOME}/gcloud-service-key.json

      - run: gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
      - run: gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run: gcloud --quiet config set compute/zone ${COMPUTE_ZONE}
      - run: gcloud --quiet container clusters get-credentials ${CLUSTER_NAME}
      
      - run: 
          name: tag docker image with latest
          command: docker tag gcr.io/${GOOGLE_PROJECT_ID}/${CONTAINER_NAME}:$CIRCLE_SHA1 gcr.io/${GOOGLE_PROJECT_ID}/${CONTAINER_NAME}:latest

      - run:
          name: Deploy Master to GKE
          command: gcloud docker -- push gcr.io/${GOOGLE_PROJECT_ID}/${CONTAINER_NAME}:$CIRCLE_SHA1

      - run: kubectl get deployment

      - run: 
          name: Set deployment image
          command: kubectl set image deployment/${DEPLOYMENT_NAME} ${CONTAINER_NAME}=gcr.io/${GOOGLE_PROJECT_ID}/${CONTAINER_NAME}:$CIRCLE_SHA1
      
workflows:
  version: 2
  test_and_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test




